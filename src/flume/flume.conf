# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements. See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership. The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.

###############################################################
##  facebook 
###############################################################

# The configuration file needs to define the sources,
# the channels and the sinks.
# Sources, channels and sinks are defined per agent,
# in this case called 'agent'
# see http://grokbase.com/t/flume/user/1314sm5vmt/httpsource-is-not-listening-on-the-port as example

SocialAgent.sources = FacebookHttpSource Twitter
SocialAgent.channels = FBmemoryChannel MemChannel
SocialAgent.sinks = fbHDFS HDFS
 
# For each one of the sources, the type is defined
SocialAgent.sources.FacebookHttpSource.type = org.apache.flume.source.http.HTTPSource
SocialAgent.sources.FacebookHttpSource.port = 51400
SocialAgent.sources.FacebookHttpSource.interceptors = Ts 
SocialAgent.sources.FacebookHttpSource.interceptors.Ts.type = org.apache.flume.interceptor.TimestampInterceptor$Builder

# The channel can be defined as follows.
SocialAgent.sources.FacebookHttpSource.channels = FBmemoryChannel
 
# Each sink's type must be defined
#Specify the channel the sink should use
SocialAgent.sinks.fbHDFS.channel = FBmemoryChannel
SocialAgent.sinks.fbHDFS.type = hdfs
SocialAgent.sinks.fbHDFS.hdfs.path = hdfs://YOURHOST:8020/user/flume/facebook/%Y/%m/%d/%H/
SocialAgent.sinks.fbHDFS.hdfs.fileType = DataStream
SocialAgent.sinks.fbHDFS.hdfs.writeFormat = Text
SocialAgent.sinks.fbHDFS.hdfs.batchSize = 1000
SocialAgent.sinks.fbHDFS.hdfs.rollSize = 0
SocialAgent.sinks.fbHDFS.hdfs.rollCount = 10000
 
# Each channel's type is defined.
SocialAgent.channels.FBmemoryChannel.type = memory

# Other config values specific to each type of channel(sink or source)
# can be defined as well
# In this case, it specifies the capacity of the memory channel
SocialAgent.channels.FBmemoryChannel.capacity = 10000
SocialAgent.channels.FBmemoryChannel.transactionCapacity = 100

###############################################################
##   twitter
###############################################################


# The configuration file needs to define the sources,
# the channels and the sinks.
# Sources, channels and sinks are defined per agent,
# in this case called 'SocialAgent'

#SocialAgent.sources = Twitter
#SocialAgent.channels = MemChannel
#SocialAgent.sinks = HDFS

SocialAgent.sources.Twitter.type = com.cloudera.flume.source.TwitterSource
SocialAgent.sources.Twitter.channels = MemChannel
SocialAgent.sources.Twitter.consumerKey = CHANGEME
SocialAgent.sources.Twitter.consumerSecret = CHANGEME
SocialAgent.sources.Twitter.accessToken = CHANGEME
SocialAgent.sources.Twitter.accessTokenSecret = CHANGEME
SocialAgent.sources.Twitter.keywords = hadoop, big data, analytics, bigdata, cloudera, data science, data scientist, business intelligence, mapreduce, data warehouse, data warehousing, mahout, hbase, nosql, newsql, businessintelligence, cloudcomputing

SocialAgent.sinks.HDFS.channel = MemChannel
SocialAgent.sinks.HDFS.type = hdfs
SocialAgent.sinks.HDFS.hdfs.path = hdfs://YOURHOST:8020/user/flume/tweets/%Y/%m/%d/%H/
SocialAgent.sinks.HDFS.hdfs.fileType = DataStream
SocialAgent.sinks.HDFS.hdfs.writeFormat = Text
SocialAgent.sinks.HDFS.hdfs.batchSize = 1000
SocialAgent.sinks.HDFS.hdfs.rollSize = 0
SocialAgent.sinks.HDFS.hdfs.rollCount = 10000

SocialAgent.channels.MemChannel.type = memory
SocialAgent.channels.MemChannel.capacity = 10000
SocialAgent.channels.MemChannel.transactionCapacity = 100

